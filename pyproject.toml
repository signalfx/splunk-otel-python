[tool.poetry]
name = "splunk-opentelemetry"
version = "1.19.1"
description = "The Splunk distribution of OpenTelemetry Python Instrumentation provides a Python agent that automatically instruments your Python application to capture and report distributed traces to SignalFx APM."
authors = ["Splunk <splunk-oss@splunk.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [
    { include = "splunk_otel" },
    { include = "splunk_otel/**/*.py" },
]
include = [
    'CHANGELOG.md',
    'README.md',
    'LICENSE'
]

[tool.poetry.scripts]
splunk-py-trace = 'splunk_otel.cmd.trace:run'
splunk-py-trace-bootstrap = 'splunk_otel.cmd.bootstrap:run'
# deprecated commands
splk-py-trace = 'splunk_otel.cmd.trace:run_deprecated'
splk-py-trace-bootstrap = 'splunk_otel.cmd.bootstrap:run_deprecated'

[tool.poetry.plugins."opentelemetry_distro"]
splunk_distro = "splunk_otel.distro:_SplunkDistro"

[tool.poetry.dependencies]
cryptography=">=2.0,<=42.0.7"
python = ">=3.8"
protobuf = "^4.23"
opentelemetry-api = "1.24.0"
opentelemetry-sdk = "1.24.0"
opentelemetry-instrumentation = "0.45b0"
opentelemetry-instrumentation-system-metrics = "0.45b0"
opentelemetry-semantic-conventions = "0.45b0"
opentelemetry-propagator-b3 = "1.24.0"
opentelemetry-exporter-otlp-proto-grpc = "1.24.0"
opentelemetry-exporter-otlp-proto-http = "1.24.0"

[tool.poetry.extras]
all = ["opentelemetry-propagator-b3", "opentelemetry-exporter-otlp-proto-grpc"]
b3 = ["opentelemetry-propagator-b3"]
otlp = ["opentelemetry-exporter-otlp-proto-grpc"]

[tool.poetry.dev-dependencies]
flake8 = "~5.0"
mypy = "1.10.0"
black = {version = "24.4.2", python = ">=3.7.0"}
isort = {version = "5.13.2", python = ">=3.7.0"}
pytest = "8.2.1"
coverage = "7.5.3"
pytest-cov = "5.0.0"
pylint = "2.17.7"
pylintfileheader = "0.3.3"
pytest-docker = {version = "3.1.1", platform = "linux"}
requests-futures = "1.0.1"
keepachangelog = "1.0.0"
click = "8.1.7"
types-setuptools = "70.0.0.20240524"
urllib3 = "2.2.1"
wrapt = ">=1.15.0"

[tool.black]
line-length = 90
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-ra"
testpaths = [
    "tests",
]
